{"version":3,"file":"static/js/583.13dcddb6.chunk.js","mappings":"iNAGaA,GAAYC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6IAOpB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAM,I,SCPjCC,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOC,EAAAA,EAAAA,KAACd,EAAS,CAACe,GAAE,WAAAC,OAAaL,EAAMM,IAAMC,MAAS,CAACC,KAAMP,GAAUQ,SAAiBT,EAAMA,OAASA,EAAMU,MAAhCV,EAAMM,GACrF,ECLaK,EAAYrB,EAAAA,QAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wBCCrBmB,EAAY,SAAHb,GAAmB,IAAbc,EAAKd,EAALc,MAC1B,OACEV,EAAAA,EAAAA,KAAA,MAAAM,SACGI,EAAMC,KAAI,SAAAC,GAAI,OACbZ,EAAAA,EAAAA,KAACQ,EAAS,CAAAF,UACRN,EAAAA,EAAAA,KAACL,EAAS,CAACE,MAAOe,KADJA,EAAKT,GAET,KAIpB,C,6HCbaU,EAAY,SAAHjB,GAAmC,IAA7BkB,EAAQlB,EAARkB,SAAUC,EAAWnB,EAAXmB,YACpC,OACEf,EAAAA,EAAAA,KAAA,OAAKgB,UAAU,YAAWV,UACxBW,EAAAA,EAAAA,MAAA,QAAMD,UAAU,cAAcF,SAAUA,EAASR,SAAA,EAC/CN,EAAAA,EAAAA,KAAA,SACEgB,UAAU,oBACVE,MAAOH,EACPI,KAAK,OACLZ,KAAK,QACLa,YAAY,WACX,KACHpB,EAAAA,EAAAA,KAAA,UAAQgB,UAAU,qBAAoBV,SAAC,eAI/C,E,mCCTe,SAASe,IAAa,IAADC,EAClCC,GAAiDC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAiBF,EAAA,GAAEG,EAAmBH,EAAA,GAC7CI,GAAsBC,EAAAA,EAAAA,MAChBC,EAAsC,QAA3BT,GADsBI,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GACcG,IAAI,gBAAQ,IAAAV,EAAAA,EAAI,IAEhDW,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGE,IAAMG,EAAgB,eAAAtC,GAAAuC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEAC,EAAAA,EAAAA,IAAmBZ,GAAa,KAAD,EAA9CO,EAAME,EAAAI,KACNjB,EAAoBW,EAAOO,KAAKC,QACtClB,GAAmBmB,EAAAA,EAAAA,GAAKpB,IAAoBa,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,wBAAAA,EAAAC,KAAA,GAAAD,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAI/C,kBARqB,OAAAzC,EAAAuD,MAAA,KAAAC,UAAA,KAStBlB,GACF,CACF,GAAG,CAACH,IAOJ,OACEd,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEN,EAAAA,EAAAA,KAACa,EAAS,CAACC,SAPM,SAAAI,GACnB,IAAMmC,EAAsB,KAAVnC,EAAe,CAAEoC,MAAOpC,GAAU,CAAC,EACzDqC,QAAQC,IAAIH,EACV,EAIuCC,MAAOvB,IACzCJ,IAAqB3B,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAACC,MAAOiB,MAG9C,C","sources":["components/TitleItem/TitleItem.styled.js","components/TitleItem/TitleItem.js","components/TitleList/TitleList.styled.js","components/TitleList/TitleList.js","components/SearchBar/SearchBar.js","components/pages/MoviePage.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MovieLink = styled(NavLink)`\ntext-decoration: none;\ncolor: black;\ndisplay: block;\nmargin: 15px;\npadding: 10px;\nborder-radius: 10px;\nbackground-color: ${p => p.theme.colors.orange};`","import { useLocation } from 'react-router-dom';\nimport { MovieLink } from './TitleItem.styled';\n\nexport const TitleItem = ({ title }) => {\n  const location = useLocation();\n\n  return <MovieLink to={`/movies/${title.id}`} state = {{from: location}} key={title.id}>{title.title || title.name}</MovieLink>;\n};\n","import styled from \"styled-components\";\n\nexport const MovieList = styled.li`\ncolor: black\n`","import { TitleItem } from 'components/TitleItem/TitleItem';\nimport { MovieList } from './TitleList.styled';\n\nexport const TitleList = ({ movie }) => {\n  return (\n    <ul>\n      {movie.map(item => (\n        <MovieList key={item.id}>\n          <TitleItem title={item} />\n        </MovieList>\n      ))}\n    </ul>\n  );\n};\n","export const SearchBar = ({ onSubmit, SearchValue }) => {\n  return (\n    <div className=\"searchbar\">\n      <form className=\"search-form\" onSubmit={onSubmit}>\n        <input\n          className=\"search-form-input\"\n          value={SearchValue}\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search\"\n        />{' '}\n        <button className=\"search-form-button\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { TitleList } from 'components/TitleList/TitleList';\nimport { fetchMoviesByQuery } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviePage() {\n  const [moviesDataByQuery, setMovieDataByQuery] = useState([]);\n  const [queryParams] = useSearchParams();\n  const searchValue = queryParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    } else {\n      const getMoviesByQuery = async () => {\n        try {\n          const search = await fetchMoviesByQuery(searchValue);\n          const moviesDataByQuery = search.data.results;\n          setMovieDataByQuery([...moviesDataByQuery]);\n        } catch (error) {\n        } finally {\n        }\n      };\n      getMoviesByQuery();\n    }\n  }, [searchValue]);\n\n  const handleSubmit = value => {\n    const newParams = value !== '' ? { query: value } : {};\nconsole.log(newParams);\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleSubmit} query={searchValue} />\n      {moviesDataByQuery && <TitleList movie={moviesDataByQuery} />}\n    </div>\n  );\n}\n"],"names":["MovieLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","p","theme","colors","orange","TitleItem","_ref","title","location","useLocation","_jsx","to","concat","id","state","from","children","name","MovieList","TitleList","movie","map","item","SearchBar","onSubmit","SearchValue","className","_jsxs","value","type","placeholder","MoviePage","_queryParams$get","_useState","useState","_useState2","_slicedToArray","moviesDataByQuery","setMovieDataByQuery","_useSearchParams","useSearchParams","searchValue","get","useEffect","getMoviesByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","search","_moviesDataByQuery","_context","prev","next","fetchMoviesByQuery","sent","data","results","_toConsumableArray","t0","finish","stop","apply","arguments","newParams","query","console","log"],"sourceRoot":""}